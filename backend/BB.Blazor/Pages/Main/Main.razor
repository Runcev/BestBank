@page "/main/{CardId:int}"
@page "/main"
@using Microsoft.IdentityModel.JsonWebTokens
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStorage
@attribute [Authorize]

<h3 style="color: white;">@CardId</h3>

<MainButtons Callback1="@Exit" Text1="Exit" Text2="Deposit"></MainButtons>

@code {

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Parameter]
    public int? CardId { get; set; }

    public async Task Exit()
    {
        await ProtectedSessionStorage.DeleteAsync("authToken").AsTask().ContinueWith(_ => NavigationManager.NavigateTo("/"));
    }

    protected override async Task OnInitializedAsync()
    {
        if (!CardId.HasValue)
        {
            var jtiValue = (await AuthenticationStateTask).User.FindFirstValue(JwtRegisteredClaimNames.Jti);
            if (jtiValue != null)
            {
                CardId = int.Parse(jtiValue);
            }
            else
            {
                NavigationManager.NavigateTo("/");
            }
        }
    }

}